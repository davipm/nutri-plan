"use client";

import Link from "next/link";
import { ReactNode } from "react";
import { usePathname } from "next/navigation";
import { Tabs, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { ROUTE_GROUPS } from "@/app/(dashboard)/_components/router-group";

export default function Layout({ children }: { children: ReactNode }) {
  const pathname = usePathname();

  /**
   * Configuration array for managing tab navigation in the Foods Management section.
   * This variable is dynamically generated by filtering and mapping items from a specific route group.
   * Each object in the array contains relevant properties for tab rendering, such as value, label, href, and icon.
   * Only items that include an icon property are included in the final array.
   */
  const tabsConfig =
    ROUTE_GROUPS.find((group) => group.group === "Foods Management")
      ?.items.map((item) => ({
        value: item.value || item.href,
        label: item.label,
        href: item.href,
        icon: item.icon,
      }))
      .filter((tab) => Boolean(tab.icon)) ?? []; // Type guard to ensure valid tabs

  /**
   * The defaultTab variable determines the initially selected tab based on the current pathname.
   * It identifies the tab configuration whose `href` property matches the beginning of the URL's pathname.
   * If a match is found, the corresponding `value` of the tab is assigned; otherwise, it defaults to "foods".
   *
   * This is useful for setting up dynamic tab selection based on the current route or URL structure.
   */
  const defaultTab =
    tabsConfig.find((tab) => pathname.startsWith(tab.href))?.value || "foods";

  return (
    <div className="mx-auto max-w-7xl p-6">
      <div className="mb-6">
        <Tabs value={defaultTab}>
          <TabsList>
            {tabsConfig.map((tab) => {
              const Icon = tab.icon;
              return (
                <TabsTrigger key={tab.value} value={tab.value} asChild>
                  <Link
                    href={tab.href}
                    className="flex items-center justify-center gap-2"
                  >
                    <Icon />
                    {tab.label}
                  </Link>
                </TabsTrigger>
              );
            })}
          </TabsList>
        </Tabs>
      </div>
      {children}
    </div>
  );
}
